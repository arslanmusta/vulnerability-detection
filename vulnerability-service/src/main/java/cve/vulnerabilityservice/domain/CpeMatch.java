package cve.vulnerabilityservice.domain;

import lombok.*;
import org.hibernate.Hibernate;

import javax.persistence.*;
import java.util.Objects;
import java.util.Set;

@Entity
@Table(name = "cpe_match")
@Access(AccessType.FIELD)
@Getter
@Setter
@ToString
@RequiredArgsConstructor
public class CpeMatch {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private int id;

    private String name;

    @Column(name = "version_start_including")
    private String versionStartIncluding;

    @Column(name = "version_start_excluding")
    private String versionStartExcluding;

    @Column(name = "version_end_including")
    private String versionEndIncluding;

    @Column(name = "version_end_excluding")
    private String versionEndExcluding;

    private boolean vulnerable;

    @ManyToMany(cascade = { CascadeType.MERGE})
    @JoinTable(
            name = "cpe_match_cpe_rel",
            joinColumns = {@JoinColumn(name = "cpe_match_id")},
            inverseJoinColumns = {@JoinColumn(name = "cpe_id")}
    )
    @ToString.Exclude
    private Set<Cpe> cpeSet;

    @ManyToMany(mappedBy = "cpeMatchSet")
    @ToString.Exclude
    private Set<Cve> cveSet;

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || Hibernate.getClass(this) != Hibernate.getClass(o)) return false;
        CpeMatch cpeMatch = (CpeMatch) o;
        return Objects.equals(id, cpeMatch.id);
    }

    @Override
    public int hashCode() {
        return getClass().hashCode();
    }
}
