package cve.vulnerabilityservice.task;

import cve.vulnerabilityservice.proxy.cpe.CpeProxy;
import cve.vulnerabilityservice.proxy.cpematch.CpeMatchProxy;
import cve.vulnerabilityservice.proxy.cpematch.model.CpeMatchResponse;
import cve.vulnerabilityservice.proxy.cve.CveProxy;
import cve.vulnerabilityservice.proxy.cve.implementation.CveProxyImpl;
import cve.vulnerabilityservice.proxy.cve.model.CveResponse;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;

import java.util.Objects;

@Component
public class DatabaseUpdateTask {
    private static final Logger log = LoggerFactory.getLogger(CveProxyImpl.class);
    private final CveProxy cveProxy;
    private final CpeProxy cpeProxy;
    private final CpeMatchProxy cpeMatchProxy;

    public DatabaseUpdateTask(CveProxy cveProxy, CpeProxy cpeProxy, CpeMatchProxy cpeMatchProxy) {
        this.cveProxy = cveProxy;
        this.cpeProxy = cpeProxy;
        this.cpeMatchProxy = cpeMatchProxy;
    }

    @Scheduled(fixedDelayString = "${cve.update.period}")
    public void update() {
        CveResponse cveResponse = cveProxy.GetCve("https://nvd.nist.gov/feeds/json/cve/1.1/nvdcve-1.1-modified.json.gz");
        log.info("CVE count: " + cveResponse.getCveDataNumberOfCVEs());

//        CpeResponse cpeResponse = cpeProxy.GetCpe("https://nvd.nist.gov/feeds/xml/cpe/dictionary/official-cpe-dictionary_v2.3.xml.gz");

        CpeMatchResponse cpeMatchResponse = cpeMatchProxy.GetCpeMatch("https://nvd.nist.gov/feeds/json/cpematch/1.0/nvdcpematch-1.0.json.gz");
        log.info("CPE MATCH count: " + cpeMatchResponse.getMatches().size());
    }
}
