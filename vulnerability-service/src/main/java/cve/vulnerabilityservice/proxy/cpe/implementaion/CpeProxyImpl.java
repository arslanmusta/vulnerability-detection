package cve.vulnerabilityservice.proxy.cpe.implementaion;

import com.fasterxml.jackson.dataformat.xml.XmlMapper;
import cve.vulnerabilityservice.proxy.cpe.CpeProxy;
import cve.vulnerabilityservice.proxy.cpe.model.CpeResponse;
import cve.vulnerabilityservice.proxy.cve.implemetation.CveProxyImpl;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

import java.io.IOException;
import java.io.InputStream;
import java.net.URL;
import java.util.zip.GZIPInputStream;

@Component
public class CpeProxyImpl implements CpeProxy {
    private static final Logger log = LoggerFactory.getLogger(CveProxyImpl.class);

    @Override
    public CpeResponse GetCpe(String url) {
        try (InputStream is = new URL(url).openStream();
             GZIPInputStream gis = new GZIPInputStream(is)) {

            var xmlMapper = new XmlMapper();
            return xmlMapper.readValue(gis, CpeResponse.class);
        } catch (IOException e) {
            log.error(e.getMessage(), e);
            return null;
        }
    }
}
