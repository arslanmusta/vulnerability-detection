package obss.cve.vulnerabledetectworker.proxy;

import obss.cve.vulnerabledetectworker.domain.Vulnerable;
import obss.cve.vulnerabledetectworker.model.Inventory;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.core.ParameterizedTypeReference;
import org.springframework.hateoas.CollectionModel;
import org.springframework.hateoas.EntityModel;
import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Component;
import org.springframework.web.reactive.function.client.WebClient;

import java.util.List;
import java.util.stream.Collectors;

@Component
public class InventoryServiceProxy {

    private final WebClient webClient;

    @Value("${services.inventory.host}")
    private String inventoryHost;

    public InventoryServiceProxy(WebClient webClient) {
        this.webClient = webClient;
    }

    public List<Inventory> GetAllInventories() {
        return   webClient.get()
                .uri(String.format("http://%s/api/v1/inventory", inventoryHost))
                .header(HttpHeaders.CONTENT_TYPE, "application/hal+json")
                .retrieve()
                .bodyToMono(new ParameterizedTypeReference<CollectionModel<EntityModel<Inventory>>>() {
                })
                .block()
                .getContent()
                .stream()
                .map(EntityModel::getContent)
                .collect(Collectors.toList());

    }
}
