package obss.cve.vulnerableservice.controller;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import obss.cve.vulnerableservice.domain.Vulnerable;
import obss.cve.vulnerableservice.model.VulnerableModelAssembler;
import obss.cve.vulnerableservice.service.VulnerableService;
import org.springframework.hateoas.CollectionModel;
import org.springframework.hateoas.EntityModel;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("/api/v1/")
public class VulnerableController {
    private final VulnerableService vulnerableService;
    private final VulnerableModelAssembler vulnerableModelAssembler;

    public VulnerableController(VulnerableService vulnerableService, VulnerableModelAssembler vulnerableModelAssembler) {
        this.vulnerableService = vulnerableService;
        this.vulnerableModelAssembler = vulnerableModelAssembler;
    }

    @Operation(summary = "Gets all vulnerabilities")
    @GetMapping("/vulnerable")
    public CollectionModel<EntityModel<Vulnerable>> all() {
        return vulnerableModelAssembler.toCollectionModel(vulnerableService.findAll());
    }

    @Operation(summary = "Gets a vulnerable")
    @GetMapping("/vulnerable/{id}")
    public EntityModel<Vulnerable> one(@PathVariable String id) {
        return vulnerableModelAssembler.toModel(vulnerableService.findOne(id));
    }

    @Operation(summary = "Passive a vulnerable")
    @ApiResponse(responseCode = "204", description = "Vulnerable passive")
    @DeleteMapping("/vulnerable/{id}/passive")
    public ResponseEntity<?> passive(@PathVariable String id) {
        vulnerableService.passive(id);

        return ResponseEntity.noContent().build();
    }
}
