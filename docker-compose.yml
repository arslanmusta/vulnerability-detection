version: "3.8"

services:
  inventory-ui:
    build: ./inventory-management
    ports:
      - "8081:80"
    depends_on:
      - browser-api-gw

  browser-api-gw:
    build: ./browser-api-gw
    ports:
      - "8080:8080"
    environment:
      - SERVICE_DESTINATIONS_INVENTORY=http://inventory:8082
      - SERVICE_DESTINATIONS_VULNERABLE=http://vulnerable:8083
      - SERVICE_DESTINATIONS_IDENTITY=http://identity:8084
      - SERVICE_DESTINATIONS_NOTIFICATION=http://notification:8085
      - SERVER_PORT=8080
    depends_on:
      - inventory

  inventory:
    build: ./inventory-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresql:5432/postgres
      - SPRING_DATASOURCE_PASSWORD=abc.1234
    depends_on:
      - postgresql

  identity:
    build: ./identity-service
    ports:
      - "8084:8084"
    environment:
      - LDAP_URL=ldap://ldap:10389/dc=obss,dc=com
      - LDAP_USERNAME=uid=admin,ou=system
      - LDAP_PASSWORD=secret
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK=TRACE

  vulnerable:
    build: ./vulnerable-service
    ports:
      - "8083:8083"
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://root:abc.1234@mongo:27017/
    depends_on:
      - mongo

  notification:
    build: ./notification-service
    ports:
      - "8085:8085"
    environment:
      - SERVICES_INVENTORY_HOST=inventory:8080
      - SPRING_DATA_MONGODB_URI=mongodb://root:abc.1234@mongo:27017/
      - KAFKA_BOOTSTRAP_ADDRESS=kafka:9092
    depends_on:
      - kafka
      - mongo
      - inventory
  
  vulnerable-update-worker:
    build: ./vulnerable-update-worker
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://root:abc.1234@mongo:27017/
    depends_on:
      - mongo

  vulnerable-detect-worker:
    build: ./vulnerable-detect-worker
    environment:
      - SERVICES_INVENTORY_HOST=inventory:8082
      - SPRING_DATA_MONGODB_URI=mongodb://root:abc.1234@mongo:27017/
      - KAFKA_BOOTSTRAP_ADDRESS=kafka:9092
    depends_on:
      - kafka
      - mongo

  notification-send-worker:
    build: ./notification-send-worker
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://root:abc.1234@mongo:27017/
      - SERVICES_INVENTORY_HOST=inventory:8082
    depends_on:
      - mongo
      - inventory

  mongo:
    image: mongo
    restart: always
    ports:
      - "27018:27017"
    volumes:
      - "mongo_data:/data/db"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=abc.1234

  postgresql:
    build: ./docker/postgresql
    restart: always
    ports:
      - "5433:5432"
    volumes:
      - "postgresql_data:/var/lib/postgresql/data"
    environment:
      - POSTGRES_PASSWORD=abc.1234

  ldap:
    build: ./docker/apacheds
    ports:
      - "389:10389"
    environment:
      - APACHEDS_INSTANCE=yourinstance

  ldap-initializer:
    build: ./docker/apacheds
    restart: "no"
    depends_on:
      - ldap
    entrypoint: ["sh","-c","sleep 30 && ldapadd -v -h ldap:10389 -c -x -D uid=admin,ou=system -w secret -f /ldifs/entry.ldif"]

  zookeeper:
    image: bitnami/zookeeper:3
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:2
    ports:
      - "19092:19092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,EXTERNAL://localhost:19092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:19092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  mongo_data:
    driver: local
  postgresql_data:
    driver: local
