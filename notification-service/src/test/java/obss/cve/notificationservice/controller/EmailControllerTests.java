package obss.cve.notificationservice.controller;

import obss.cve.notificationservice.domain.Config;
import obss.cve.notificationservice.repository.ConfigRepository;
import obss.cve.notificationservice.service.EmailService;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.springframework.boot.test.context.SpringBootTest;

import java.util.List;
import java.util.Optional;

import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.ArgumentMatchers.anyString;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

@SpringBootTest
public class EmailControllerTests {
    private EmailController emailController;

    @Mock
    private EmailService emailService;

    @BeforeEach
    public void setUp() {
        emailController = new EmailController(emailService);
    }

    @Test
    public void whenAllCalled_thenReturnServiceResult() {
        when(emailService.all()).thenReturn(List.of("a@a", "b@b"));

        List<String> result = emailController.all();

        assertTrue(result.stream().allMatch(s -> s.equals("a@a") || s.equals("b@b")));
    }

    @Test
    public void whenUpdateCalled_thenReturnServiceResult() {
        when(emailService.update(any())).thenReturn(List.of("a@a", "b@b"));

        List<String> result = emailController.update(List.of("a@a", "b@b"));

        assertTrue(result.stream().allMatch(s -> s.equals("a@a") || s.equals("b@b")));
    }
}
